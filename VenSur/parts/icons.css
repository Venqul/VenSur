/* Replace icons */

@namespace xul "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";

/* Built-in firefox icons color */

.toolbarbutton-icon,
.protections-popup-category-icon,
.protections-popup-footer-icon {
	fill: currentColor !important;
	fill-opacity: 0.7 !important;
}

/* Shrink all buttons */
#nav-bar toolbarbutton:not(#unified-extensions-button) {
  scale: 0.9 !important;
}
/* Tabs scroll icons */

#TabsToolbar .scrollbutton-up {
	list-style-image: url("../icons/pan-start-symbolic.svg") !important;
}

#TabsToolbar .scrollbutton-down {
	list-style-image: url("../icons/pan-start-symbolic.svg") !important;
}

/* Popovers subview menu arrow */

.PanelUI-subView .subviewbutton-nav::after {
	content: "" !important;
	background: url("../icons/pan-start-symbolic.svg");
	background-size: contain;
	height: 16px;
	width: 16px;
	margin-top: -2px !important;
}

.protections-popup-category::after {
	content: url("../icons/pan-start-symbolic.svg") !important;
}

.identity-popup-content-blocking-category::after {
	content: url("../icons/pan-start-symbolic.svg") !important;
}

#identity-popup-security-expander .button-icon {
	list-style-image: url("../icons/pan-start-symbolic.svg") !important;
}

/* Popovers subview back button */

.subviewbutton-back {
	list-style-image: url("../icons/pan-start-symbolic.svg") !important;
}

/* Sub menu arrow */

.menu-right {
	appearance: none;
	-moz-appearance: none !important;
	list-style-image: url("../icons/pan-end-symbolic.svg") !important;
	width: 16px !important;
	height: 16px !important;
}

menu[disabled] > .menu-right {
	opacity: 0.3;
}

/* menu:not([disabled]):hover > .menu-right {
	filter: invert(100%) brightness(200%);
} */

/* Arrow down buttons */

.expander-down > .button-box,
#sidebar-switcher-arrow,
#viewButton .button-menu-dropmarker {
	appearance: none;
	-moz-appearance: none !important;
	list-style-image: url("../icons/pan-down-symbolic.svg") !important;
	width: 16px !important;
	height: 16px !important;
}

.menulist-label-box:after {
	content: url("../icons/pan-down-symbolic.svg") !important;
}

/* Arrow up buttons */

.expander-up > .button-box {
	appearance: none;
	-moz-appearance: none !important;
	list-style-image: url("../icons/pan-up-symbolic.svg") !important;
	width: 16px !important;
	height: 16px !important;
}

/* Search entries */

#urlbar[pageproxystate="invalid"] > #identity-box > #identity-icon,
.searchbar-search-icon,
#search-box .textbox-search-sign {
	list-style-image: url("../icons/edit-find-symbolic.svg") !important;
	opacity: 0.7 !important;
}

#search-box .textbox-search-sign {
	width: 16px !important;
	margin: 2px 0;
}

/* Tree views */

treechildren::-moz-tree-twisty {
	list-style-image: url("../icons/pan-down-symbolic.svg") !important;
	width: 16px !important;
	height: 16px !important;
}

treechildren::-moz-tree-twisty(open) {
	list-style-image: url("../icons/pan-end-symbolic.svg") !important;
}

treechildren::-moz-tree-twisty(selected, focus) {
	list-style-image: url("../icons/pan-down-symbolic-light.svg") !important;
}

treechildren::-moz-tree-twisty(selected, focus, open) {
	list-style-image: url("../icons/pan-end-symbolic-light.svg") !important;
}

.sidebar-panel[lwt-sidebar-brighttext] .sidebar-placesTreechildren::-moz-tree-twisty {
	list-style-image: url("../icons/pan-down-symbolic-light.svg") !important;
}

.sidebar-panel[lwt-sidebar-brighttext] .sidebar-placesTreechildren::-moz-tree-twisty(open) {
	list-style-image: url("../icons/pan-end-symbolic-light.svg") !important;
}

/* Sidebar: History: clock icon */

#historyTree treechildren::-moz-tree-image {
	list-style-image: url("../icons/preferences-system-time-symbolic.svg") !important;
}

/* Menu checkbox */

/* Remove the original list-style */
menuitem[type="checkbox"] {
    list-style: none;
    position: relative;
}

/* Sidebar clear hisory icon */
#sidebar-history-clear > .menu-icon{
	   content: "";
    display: inline-block;
    width: 14px !important;
    height: 14px !important;
    margin-right: 5px;
    vertical-align: middle;
	position: relative;
	bottom: 2px !important;

    mask: url("chrome://global/skin/icons/delete.svg") no-repeat center;
    mask-size: contain;
    -webkit-mask: url("chrome://global/skin/icons/delete.svg") no-repeat center;
    -webkit-mask-size: contain;
    opacity: 70% !important; /* makes it semi-transparent */
    background-color: currentColor; /* color for unchecked checkbox */
}

/* Venqul removed
menuitem[type="checkbox"] {
	list-style-image: url("../icons/checkbox-symbolic.svg") !important;
}
*/

/* menuitem[type="checkbox"][hover="true"] {
} */

menuitem[type="checkbox"][checked="true"] {
	list-style-image: url("../icons/checkbox-checked-symbolic.svg") !important;
}

menuitem[type="checkbox"][disabled="true"] .menu-iconic-icon {
	opacity: 0.5;
}

/* menuitem[type="checkbox"]:not([disabled="true"]):hover .menu-iconic-icon {
	filter: invert(100%) brightness(200%);
} */

/* Menu radio */

/* Venqul removed
menuitem[type="radio"] {
	list-style-image: url("../icons/radio-symbolic.svg") !important;
}
*/
menuitem[type="radio"][checked="true"] {
	list-style-image: url("../icons/radio-checked-symbolic.svg") !important;
}

menuitem[type="radio"][disabled="true"] .menu-iconic-icon {
	opacity: 0.5;
}

/* menuitem[type="radio"]:not([disabled="true"]):hover .menu-iconic-icon {
	filter: invert(100%) brightness(200%);
} */

/* Close button */

.close-icon:not(.tab-close-button),
.identity-popup-permission-remove-button .button-icon {
	list-style-image: url("../icons/window-close-symbolic.svg") !important;
}

/* Private browsing button */

#privatebrowsing-button {
	list-style-image: url("../icons/user-not-tracked.svg") !important;
}

/* Sidebar button */

#sidebar-button:-moz-locale-dir(ltr):not([positionend]) .toolbarbutton-icon,
#sidebar-button:-moz-locale-dir(rtl)[positionend] .toolbarbutton-icon {
	list-style-image: url("../icons/toggle-sidebar-symbolic.svg") !important;
}

#sidebar-button .toolbarbutton-icon {
	list-style-image: url("../icons/toggle-right-sidebar-symbolic.svg");
}

/* Back button */
#nav-bar #back-button .toolbarbutton-icon,
#context-back {
	list-style-image: url("../icons/go-previous-symbolic.svg") !important;
}

/* Forward button */

#nav-bar #forward-button .toolbarbutton-icon,
#context-forward {
	list-style-image: url("../icons/go-next-symbolic.svg") !important;
}


/* New tab button */

#new-tab-button,
.tabs-newtab-button,
#tabs-newtab-button,
#TabsToolbar {
	list-style-image: url("../icons/tab-new-symbolic.svg") !important;
}

#new-tab-button .toolbarbutton-icon{
	width: 30px !important;
	height: 30px !important;
}
/* Home button */

#home-button {
	list-style-image: none !important;
}
#home-button[overflowedItem],
toolbarpaletteitem[place="palette"] #home-button  {
	list-style-image: url("../icons/user-home-symbolic.svg") !important;
}
toolbar:not([place="palette"]) #home-button::before{
		  /* 1. Make the pseudo-element an empty, styleable box. */
  content: '' !important;
  display: block !important; /* Allows it to have a background/mask */

  /* 2. Set the background color using your variable. This provides the icon's color. */
  background-color: var(--toolbox-textcolor);

  /* 3. Apply the icon's SHAPE as a mask. This cuts out the background color. */
  -webkit-mask-image: url("../icons/user-home-symbolic.svg") !important;
  /* --- Sizing and Positioning --- */
  /* We must give the pseudo-element a size */
  width: 100% !important;
  height: 100% !important;
	opacity: 80% !important;
scale: 0.61 !important;
  /* Keep all your original positioning styles */
  position: absolute !important;
 

  pointer-events: none !important;

  /* --- Mask properties and cleanup --- */
  -webkit-mask-size: contain;
  mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;/* Clean up old property */
}

/* Preferences button */

#preferences-button {
	list-style-image: url("../icons/preferences-system-symbolic.svg") !important;
}

/* Fullscreen button */

#fullscreen-button,
#appMenu-fullscreen-button {
	list-style-image: url("../icons/view-fullscreen-symbolic.svg") !important;
}

/* Zoom out button */

#zoom-out-button,
#appMenu-zoomReduce-button {
	list-style-image: url("../icons/zoom-out-symbolic.svg") !important;
}

/* Zoom in button */

#zoom-in-button,
#appMenu-zoomEnlarge-button {
	list-style-image: url("../icons/zoom-in-symbolic.svg") !important;
}

/* Developer button */

#developer-button {
	list-style-image: url("../icons/applications-engineering-symbolic.svg") !important;
}

/* Email link button */



toolbar:not([place="palette"]) #email-link-button {
	list-style-image: none !important;
}
 #email-link-button[overflowedItem],
toolbarpaletteitem[place="palette"] #email-link-button {
	list-style-image: url("../icons/email-link.svg") !important;
}
toolbar:not([place="palette"])  #email-link-button::before{
		  /* 1. Make the pseudo-element an empty, styleable box. */
  content: '' !important;
  display: block !important; /* Allows it to have a background/mask */

  /* 2. Set the background color using your variable. This provides the icon's color. */
  background-color: var(--toolbox-textcolor);

  /* 3. Apply the icon's SHAPE as a mask. This cuts out the background color. */
  -webkit-mask-image: url("../icons/email-link.svg") !important;
  /* --- Sizing and Positioning --- */
  /* We must give the pseudo-element a size */
  width: 100% !important;
  height: 100% !important;
	opacity: 80% !important;
scale: 0.62 !important;
  /* Keep all your original positioning styles */
  position: absolute !important;
 

  pointer-events: none !important;

  /* --- Mask properties and cleanup --- */
  -webkit-mask-size: contain;
  mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;/* Clean up old property */
}

/* Print button */

#print-button {
	list-style-image: url("../icons/printer-symbolic.svg") !important;
}

/* Addons button */

#add-ons-button {
	list-style-image: url("../icons/application-x-addon-symbolic.svg") !important;
}

/* Find button */

#find-button {
	list-style-image: url("../icons/edit-find-symbolic.svg") !important;
}

/* New window button */

#new-window-button {
	list-style-image: url("../icons/window-new-symbolic.svg") !important;
}

/* Bookmarks menu button */

#bookmarks-menu-button {
	list-style-image: url("../icons/bookmarks-symbolic.svg") !important;
}

/* History button */

#history-panelmenu {
	list-style-image: url("../icons/preferences-system-time-symbolic.svg") !important;
}



/* All tabs button */

#alltabs-button {
	list-style-image: url("../icons/pan-down-symbolic.svg") !important;
}

/* Cut button */

#cut-button,
#appMenu-cut-button {
	list-style-image: url("../icons/edit-cut-symbolic.svg") !important;
}

/* Copy button */

#copy-button,
#appMenu-copy-button {
	list-style-image: url("../icons/edit-copy-symbolic.svg") !important;
}

/* Paste button */

#paste-button,
#appMenu-paste-button {
	list-style-image: url("../icons/edit-paste-symbolic.svg") !important;
}

/* Overflow button */
#nav-bar-overflow-button  {
    list-style-image: none !important;
}

#nav-bar-overflow-button::before{
		  /* 1. Make the pseudo-element an empty, styleable box. */
  content: '' !important;
  display: block !important; /* Allows it to have a background/mask */

  /* 2. Set the background color using your variable. This provides the icon's color. */
  background-color: var(--toolbox-textcolor);

  /* 3. Apply the icon's SHAPE as a mask. This cuts out the background color. */
  -webkit-mask-image: url("../icons/overflow.svg") !important;
  /* --- Sizing and Positioning --- */
  /* We must give the pseudo-element a size */
  width: 100% !important;
  height: 100% !important;
	opacity: 50% !important;
scale: 0.6 !important;
  /* Keep all your original positioning styles */
  position: absolute !important;
 

  pointer-events: none !important;

  /* --- Mask properties and cleanup --- */
  -webkit-mask-size: contain;
  mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;/* Clean up old property */
}




/* Glitch - animations (may be possible to fix in about:config) */

toolbar:not([place="palette"])  #reload-button {
	/* Reload button */
	list-style-image: none !important;
	animation: none !important;
}
#reload-button[overflowedItem],
toolbarpaletteitem[place="palette"] #reload-button {
	list-style-image:  url("../icons/view-refresh-symbolic.svg") !important;
		animation: none !important;
}
toolbar:not([place="palette"])  #reload-button::before{
		  /* 1. Make the pseudo-element an empty, styleable box. */
  content: '' !important;
  display: block !important; /* Allows it to have a background/mask */

  /* 2. Set the background color using your variable. This provides the icon's color. */
  background-color: var(--toolbox-textcolor);

  /* 3. Apply the icon's SHAPE as a mask. This cuts out the background color. */
  -webkit-mask-image: url("../icons/view-refresh-symbolic.svg") !important;
  /* --- Sizing and Positioning --- */
  /* We must give the pseudo-element a size */
  width: 100% !important;
  height: 100% !important;
	opacity: 80% !important;
scale: 0.61 !important;
  /* Keep all your original positioning styles */
  position: absolute !important;
 

  pointer-events: none !important;

  /* --- Mask properties and cleanup --- */
  -webkit-mask-size: contain;
  mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;/* Clean up old property */
}


#stop-button {
	/* Stop button */
	list-style-image: url("../icons/process-stop-symbolic.svg") !important;
	animation: none !important;
}

#downloads-button .toolbarbutton-icon {
	/* Downloads button / Glitch - it swaps to the default one anyway */
	list-style-image: url("../icons/folder-download-symbolic.svg") !important;
	animation: none !important;
}

#identity-box[pageproxystate="valid"].verifiedDomain #identity-icon,
#identity-box[pageproxystate="valid"].mixedActiveBlocked #identity-icon {
	list-style-image: url("../icons/folder-locked-symbolic.svg") !important;
}

#identity-box[pageproxystate="valid"].weakCipher #identity-icon,
#identity-box[pageproxystate="valid"].mixedDisplayContent #identity-icon,
#identity-box[pageproxystate="valid"].mixedDisplayContentLoadedActiveBlocked #identity-icon,
#identity-box[pageproxystate="valid"].certUserOverridden #identity-icon,
#identity-box[pageproxystate="valid"].certErrorPage #identity-icon {
	list-style-image: url("../icons/security-warning-symbolic.svg") !important;
}

#identity-box[pageproxystate="valid"].notSecure #identity-icon,
#identity-box[pageproxystate="valid"].mixedActiveContent #identity-icon,
#identity-box[pageproxystate="valid"].httpsOnlyErrorPage #identity-icon {
	list-style-image: url("../icons/security-broken-symbolic.svg") !important;
}

#identity-box[pageproxystate="valid"].localResource #identity-icon {
	list-style-image: url("../icons/page-symbolic.svg") !important;
}

#pageActionButton,
.share-more-button {
	list-style-image: url("../icons/page-action.svg") !important;
}

#pocket-button,
#pageAction-panel-pocket {
	list-style-image: url("../icons/save-to-pocket.svg") !important;
}

#star-button {
	list-style-image: url("../icons/star-symbolic.svg") !important;
}

#star-button[starred] {
	list-style-image: url("../icons/starred-symbolic.svg") !important;
}

#plugins-notification-icon:not(.plugin-blocked)[extraAttr="inactive"] > .plugin-icon {
	fill-opacity: 0.25;
	list-style-image: url("../icons/application-x-addon-symbolic.svg") !important;
}

#plugins-notification-icon:not(.plugin-blocked)[extraAttr="active"] > .plugin-icon {
	fill-opacity: 1;
	list-style-image: url("../icons/application-x-addon-symbolic.svg") !important;
}

/* #plugin-icon-badge {
    list-style-image: url("../icons/application-x-addon-symbolic.svg") !important;
} */

#reader-mode-button {
	list-style-image: url("../icons/reader-mode.svg") !important;
}

#permissions-granted-icon {
	list-style-image: url("../icons/permissions-granted.svg") !important;
}

#tracking-protection-icon {
	list-style-image: url("../icons/tracking-protection.svg") !important;
}

#tracking-protection-icon-animatable-image {
	background-image: url("../icons/tracking-protection-animatable.svg") !important;
}

.bookmark-item[container] {
	list-style-image: url("../icons/folder-symbolic.svg") !important;
}



toolbar:not([place="palette"])  #tabs-newtab-button, 
toolbar:not([place="palette"]) #new-tab-button {
list-style-image: none !important;
}
#new-tab-button[overflowedItem],
#tabs-newtab-button[overflowedItem]{
	list-style-image: url("../icons/new-tab icon.svg") !important;
}
toolbarpaletteitem[place="palette"] #tabs-newtab-button, 
toolbarpaletteitem[place="palette"] #new-tab-button {
	list-style-image: url("../icons/new-tab icon.svg") !important;
  scale: 0.5 !important;
}
toolbar:not([place="palette"])  #tabs-newtab-button::before,
toolbar:not([place="palette"])  #new-tab-button::before{
		  /* 1. Make the pseudo-element an empty, styleable box. */
  content: '' !important;
  display: block !important; /* Allows it to have a background/mask */

  /* 2. Set the background color using your variable. This provides the icon's color. */
  background-color: var(--toolbox-textcolor);

  /* 3. Apply the icon's SHAPE as a mask. This cuts out the background color. */
  -webkit-mask-image: url("../icons/new-tab icon.svg") !important;
  /* --- Sizing and Positioning --- */
  /* We must give the pseudo-element a size */
  width: 100% !important;
  height: 100% !important;
	opacity: 80% !important;
scale: 0.55 !important;
  /* Keep all your original positioning styles */
  position: absolute !important;
 

  pointer-events: none !important;

  /* --- Mask properties and cleanup --- */
  -webkit-mask-size: contain;
  mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;/* Clean up old property */
}

toolbar:not([place="palette"]) #downloads-indicator-anchor {
list-style-image: none !important;
}

toolbarpaletteitem[place="palette"] #downloads-indicator-anchor {
	list-style-image: url("../icons/new-tab icon.svg") !important;
}
toolbar:not([place="palette"]) #downloads-indicator-anchor::before{
		  /* 1. Make the pseudo-element an empty, styleable box. */
  content: '' !important;
  display: block !important; /* Allows it to have a background/mask */

  /* 2. Set the background color using your variable. This provides the icon's color. */
  background-color: var(--toolbox-textcolor);

  /* 3. Apply the icon's SHAPE as a mask. This cuts out the background color. */
  -webkit-mask-image: url("../icons/downloads.svg") !important;
  /* --- Sizing and Positioning --- */
  /* We must give the pseudo-element a size */
  width: 100% !important;
  height: 100% !important;
	opacity: 80% !important;
scale: 0.62 !important;
  /* Keep all your original positioning styles */
  position: absolute !important;
	bottom: 0px !important;
	left: 0px !important;
 

  pointer-events: none !important;

  /* --- Mask properties and cleanup --- */
  -webkit-mask-size: contain;
  mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;/* Clean up old property */
}
/*
#unified-extensions-button{
	list-style-image: url("../icons/Extensions icon.svg") !important;
}
*/
#nav-bar {
  position: relative;
}
/* Button arrangement Venqul */

#sidebar-button {
  -moz-box-ordinal-group: 1 !important; /* old XUL fallback */
  order: -2 !important;
}

#unified-extensions-button {
  -moz-box-ordinal-group: 2 !important; 
  order: -1 !important;
}


 #unified-extensions-button {
  position: relative !important;
  filter: grayscale(0) brightness(160%) contrast(180%) !important;
  scale: 0.55 !important;
  max-width: 95px !important;
  margin-right: -6px !important;
  margin-left: -2px !important;
  list-style-image: none !important;
	right: 8px !important;
}




/* Icon with arrow (pure mask, no bar baked in) */
#unified-extensions-button::after {
  content: '';
  display: block !important;
  width: 22px !important;
  height: 24px !important;
  background-color: var(--toolbox-textcolor) !important;

  mask-image:  url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg width='43' height='20' viewBox='0 4.1 20.335 9.648' fill='none' xmlns='http://www.w3.org/2000/svg' xmlns:bx='https://boxy-svg.com' preserveAspectRatio='none'%3E%3Cdefs%3E%3Cbx:export%3E%3Cbx:file format='svg' path='small arrow downwards.svg'/%3E%3C/bx:export%3E%3C/defs%3E%3Cpath opacity='0.6' d='M 9.907 11.279 C 10.157 11.279 10.348 11.189 10.551 10.986 L 13.368 8.103 C 13.516 7.958 13.582 7.787 13.582 7.58 C 13.582 7.158 13.239 6.806 12.821 6.806 C 12.614 6.806 12.418 6.892 12.258 7.06 L 9.914 9.494 L 7.559 7.06 C 7.399 6.896 7.204 6.806 6.993 6.806 C 6.575 6.806 6.231 7.158 6.231 7.58 C 6.231 7.787 6.301 7.955 6.446 8.107 L 9.266 10.986 C 9.469 11.193 9.664 11.279 9.907 11.279 Z' style='fill: currentcolor;'/%3E%3C/svg%3E");
  
  margin-right: -25px !important;

  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;
  -webkit-mask-size: contain;
  mask-size: contain;

  pointer-events: none !important;
  opacity: 1 !important;
  position: relative !important;

  left: -95% !important;
  scale: 2 !important;
  z-index: 2;
}




toolbar:not([place="palette"])  #firefox-view-button {
list-style-image: none !important;
}
#firefox-view-button[overflowedItem],
toolbarpaletteitem[place="palette"] #firefox-view-button {
list-style-image: url("../icons/Firefox-view.svg") !important;
}
/* Only affect buttons inside toolbarpaletteitem with place="palette" */


toolbar:not([place="palette"])  #firefox-view-button::before{
		  /* 1. Make the pseudo-element an empty, styleable box. */
  content: '' !important;
  display: block !important; /* Allows it to have a background/mask */

  /* 2. Set the background color using your variable. This provides the icon's color. */
  background-color: var(--toolbox-textcolor);

  /* 3. Apply the icon's SHAPE as a mask. This cuts out the background color. */
  -webkit-mask-image: url("../icons/Firefox-view.svg") !important;
  /* --- Sizing and Positioning --- */
  /* We must give the pseudo-element a size */
  width: 97% !important;
  height: 100% !important;
	opacity: 80% !important;
scale: 0.62 !important;
  /* Keep all your original positioning styles */
  position: absolute !important;
 

  pointer-events: none !important;

  /* --- Mask properties and cleanup --- */
  -webkit-mask-size: contain;
  mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;/* Clean up old property */
}



.tab-icon-image[src="chrome://branding/content/icon32.png"] { 
  content: url("../icons/new-tab favicon.svg") !important; 
}

#main-window toolbox toolbar :-moz-any(#sidebar-button) .toolbarbutton-icon{
	list-style-image: none !important;
}
 #sidebar-button[overflowedItem],
toolbarpaletteitem[place="palette"] #sidebar-button{
	list-style-image:url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg width='43' height='20' viewBox='-1 -4.5 69 30' fill='none' xmlns='http://www.w3.org/2000/svg' xmlns:bx='https://boxy-svg.com' preserveAspectRatio='none'%3E%3Cdefs%3E%3Cbx:export%3E%3Cbx:file format='svg' path='extension button.svg'/%3E%3C/bx:export%3E%3C/defs%3E%3Cpath opacity='0.7' d='M 26.059 18.418 L 40.42 18.418 C 42.163 18.418 43.026 17.554 43.026 15.844 L 43.026 5.709 C 43.026 3.999 42.163 3.136 40.42 3.136 L 26.059 3.136 C 24.324 3.136 23.453 3.991 23.453 5.709 L 23.453 15.844 C 23.453 17.563 24.324 18.418 26.059 18.418 Z M 26.076 17.081 C 25.246 17.081 24.789 16.641 24.789 15.778 L 24.789 5.775 C 24.789 4.912 25.246 4.472 26.076 4.472 L 29.778 4.472 L 29.778 17.081 L 26.076 17.081 Z M 40.403 4.472 C 41.225 4.472 41.69 4.912 41.69 5.775 L 41.69 15.778 C 41.69 16.641 41.225 17.081 40.403 17.081 L 31.081 17.081 L 31.081 4.472 L 40.403 4.472 Z M 28.184 7.552 C 28.433 7.552 28.657 7.328 28.657 7.087 C 28.657 6.838 28.433 6.622 28.184 6.622 L 26.399 6.622 C 26.15 6.622 25.935 6.838 25.935 7.087 C 25.935 7.328 26.15 7.552 26.399 7.552 L 28.184 7.552 Z M 28.184 9.702 C 28.433 9.702 28.657 9.478 28.657 9.229 C 28.657 8.98 28.433 8.772 28.184 8.772 L 26.399 8.772 C 26.15 8.772 25.935 8.98 25.935 9.229 C 25.935 9.478 26.15 9.702 26.399 9.702 L 28.184 9.702 Z M 28.184 11.843 C 28.433 11.843 28.657 11.636 28.657 11.387 C 28.657 11.138 28.433 10.922 28.184 10.922 L 26.399 10.922 C 26.15 10.922 25.935 11.138 25.935 11.387 C 25.935 11.636 26.15 11.843 26.399 11.843 L 28.184 11.843 Z' fill='%23F1F1F1'/%3E%3C/svg%3E");!important;
}

 #sidebar-button {
  position: relative !important; /* make it a positioning context */
}
toolbar:not([place="palette"]):has(#sidebar-button:hover) #sidebar-button:after,
toolbar:not([place="palette"]):has(#unified-extensions-button:hover) #sidebar-button:after{
	opacity: 0% !important;
	transition: opacity 0.3s !important;
}
toolbar:not([place="palette"]) #sidebar-button::after  {
  content: '';
  position: absolute;
  top: 8px;
  right: -3px; /* adjust spacing */
  width: 1px;
  height: 20px;
  background-color: var(--toolbox-textcolor) !important;
  opacity: 0.1 !important;
  pointer-events: none;
  z-index: 9999;
		transition: opacity 0.3s !important;
}
toolbar:not([place="palette"]) #sidebar-button::before {
	  /* 1. Make the pseudo-element an empty, styleable box. */
  content: '' !important;
  display: block !important; /* Allows it to have a background/mask */

  /* 2. Set the background color using your variable. This provides the icon's color. */
  background-color: var(--toolbox-textcolor);

  /* 3. Apply the icon's SHAPE as a mask. This cuts out the background color. */
  -webkit-mask-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg width='43' height='20' viewBox='-1 -4.5 69 30' fill='none' xmlns='http://www.w3.org/2000/svg' xmlns:bx='https://boxy-svg.com' preserveAspectRatio='none'%3E%3Cdefs%3E%3Cbx:export%3E%3Cbx:file format='svg' path='extension button.svg'/%3E%3C/bx:export%3E%3C/defs%3E%3Cpath opacity='0.7' d='M 26.059 18.418 L 40.42 18.418 C 42.163 18.418 43.026 17.554 43.026 15.844 L 43.026 5.709 C 43.026 3.999 42.163 3.136 40.42 3.136 L 26.059 3.136 C 24.324 3.136 23.453 3.991 23.453 5.709 L 23.453 15.844 C 23.453 17.563 24.324 18.418 26.059 18.418 Z M 26.076 17.081 C 25.246 17.081 24.789 16.641 24.789 15.778 L 24.789 5.775 C 24.789 4.912 25.246 4.472 26.076 4.472 L 29.778 4.472 L 29.778 17.081 L 26.076 17.081 Z M 40.403 4.472 C 41.225 4.472 41.69 4.912 41.69 5.775 L 41.69 15.778 C 41.69 16.641 41.225 17.081 40.403 17.081 L 31.081 17.081 L 31.081 4.472 L 40.403 4.472 Z M 28.184 7.552 C 28.433 7.552 28.657 7.328 28.657 7.087 C 28.657 6.838 28.433 6.622 28.184 6.622 L 26.399 6.622 C 26.15 6.622 25.935 6.838 25.935 7.087 C 25.935 7.328 26.15 7.552 26.399 7.552 L 28.184 7.552 Z M 28.184 9.702 C 28.433 9.702 28.657 9.478 28.657 9.229 C 28.657 8.98 28.433 8.772 28.184 8.772 L 26.399 8.772 C 26.15 8.772 25.935 8.98 25.935 9.229 C 25.935 9.478 26.15 9.702 26.399 9.702 L 28.184 9.702 Z M 28.184 11.843 C 28.433 11.843 28.657 11.636 28.657 11.387 C 28.657 11.138 28.433 10.922 28.184 10.922 L 26.399 10.922 C 26.15 10.922 25.935 11.138 25.935 11.387 C 25.935 11.636 26.15 11.843 26.399 11.843 L 28.184 11.843 Z' fill='%23F1F1F1'/%3E%3C/svg%3E");
  /* --- Sizing and Positioning --- */
  /* We must give the pseudo-element a size */
  width: 100% !important;
  height: 100% !important;
scale: 2.14 !important;
  /* Keep all your original positioning styles */
  position: absolute !important;
 

  pointer-events: none !important;

  /* --- Mask properties and cleanup --- */
  -webkit-mask-size: contain;
  mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;
  fill: none !important; /* Clean up old property */
}

#PanelUI-menu-button {
    list-style-image: none !important;
}
#PanelUI-menu-button::before{
		  /* 1. Make the pseudo-element an empty, styleable box. */
  content: '' !important;
  display: block !important; /* Allows it to have a background/mask */

  /* 2. Set the background color using your variable. This provides the icon's color. */
  background-color: var(--toolbox-textcolor);

  /* 3. Apply the icon's SHAPE as a mask. This cuts out the background color. */
  -webkit-mask-image: url("../icons/hamburger menu.svg") !important;
  /* --- Sizing and Positioning --- */
  /* We must give the pseudo-element a size */
  width: 100% !important;
  height: 100% !important;
	opacity: 80% !important;
scale: 0.61 !important;
  /* Keep all your original positioning styles */
  position: absolute !important;
 

  pointer-events: none !important;

  /* --- Mask properties and cleanup --- */
  -webkit-mask-size: contain;
  mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;/* Clean up old property */
}

/* Settings Icons */

xul|*.addons-icon {
  list-style-image: url("../icons/Extensions icon.svg") !important;
  width: 16px !important;
  height: 16px !important;
}
.category[name="extension"] {
  background-image: url("../icons/Extensions-icon-settings.svg") !important;

}

/* Invert icons color in dark variant */

@media (prefers-color-scheme: dark) {
	/* Tree views */

	treechildren::-moz-tree-twisty {
		list-style-image: url("../icons/pan-down-symbolic-light.svg") !important;
	}

	treechildren::-moz-tree-twisty(open) {
		list-style-image: url("../icons/pan-end-symbolic-light.svg") !important;
	}

	#historyTree treechildren::-moz-tree-image {
		list-style-image: url("../icons/preferences-system-time-symbolic-light.svg") !important;
	}
}

